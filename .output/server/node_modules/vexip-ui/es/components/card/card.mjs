import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, renderSlot, createTextVNode, toDisplayString, createCommentVNode, createElementVNode, normalizeStyle } from "vue";
import "../../common/config/src/index.mjs";
import { cardProps } from "./props.mjs";
import _export_sfc from "../../_virtual/plugin-vue_export-helper.mjs";
import { useProps } from "../../common/config/src/props.mjs";
import { useNameHelper } from "../../common/config/src/namespace.mjs";
const _sfc_main = defineComponent({
  name: "Card",
  props: cardProps,
  setup(_props, { slots }) {
    const props = useProps("card", _props, {
      title: "",
      shadow: {
        default: "always",
        validator: (value) => ["always", "hover", "never"].includes(value)
      },
      contentStyle: () => ({})
    });
    const nh = useNameHelper("card");
    const className = computed(() => {
      return [
        nh.b(),
        nh.bs("vars"),
        nh.bm(`shadow-${props.shadow}`),
        {
          [nh.bm("inherit")]: props.inherit
        }
      ];
    });
    const hasTitle = computed(() => {
      return slots.title || props.title;
    });
    const hasExtra = computed(() => {
      return slots.extra;
    });
    const hasHeader = computed(() => {
      return slots.header || hasTitle.value || hasExtra.value;
    });
    return {
      props,
      nh,
      className,
      hasTitle,
      hasExtra,
      hasHeader
    };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("article", {
    class: normalizeClass(_ctx.className)
  }, [
    _ctx.hasHeader ? (openBlock(), createElementBlock("div", {
      key: 0,
      class: normalizeClass(_ctx.nh.be("header"))
    }, [
      renderSlot(_ctx.$slots, "header", {}, () => [
        _ctx.hasTitle ? (openBlock(), createElementBlock("div", {
          key: 0,
          class: normalizeClass(_ctx.nh.be("title"))
        }, [
          renderSlot(_ctx.$slots, "title", {}, () => [
            createTextVNode(toDisplayString(_ctx.props.title), 1)
          ])
        ], 2)) : createCommentVNode("", true),
        _ctx.hasExtra ? (openBlock(), createElementBlock("div", {
          key: 1,
          class: normalizeClass(_ctx.nh.be("extra"))
        }, [
          renderSlot(_ctx.$slots, "extra")
        ], 2)) : createCommentVNode("", true)
      ])
    ], 2)) : createCommentVNode("", true),
    createElementVNode("div", {
      class: normalizeClass(_ctx.nh.be("content")),
      style: normalizeStyle(_ctx.props.contentStyle)
    }, [
      renderSlot(_ctx.$slots, "default")
    ], 6)
  ], 2);
}
var Card = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { Card as default };

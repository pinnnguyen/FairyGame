import { defineComponent, inject, ref, computed, onMounted, nextTick, resolveComponent, openBlock, createBlock, Transition, withCtx, withDirectives, createElementVNode, normalizeClass, normalizeStyle, renderSlot, createElementBlock, Fragment, createTextVNode, toDisplayString, vShow } from "vue";
import "../renderer/index.mjs";
import "../../common/config/src/index.mjs";
import { noop } from "@vexip-ui/utils";
import { DELETE_HANDLER } from "./symbol.mjs";
import _export_sfc from "../../_virtual/plugin-vue_export-helper.mjs";
import Renderer from "../renderer/renderer.mjs";
import { classProp } from "../../common/config/src/props.mjs";
import { useNameHelper } from "../../common/config/src/namespace.mjs";
import { useZIndex } from "../../common/config/src/z-index.mjs";
const _sfc_main = defineComponent({
  name: "PopupItem",
  components: {
    Renderer
  },
  props: {
    state: {
      type: Object,
      default: () => ({})
    },
    transitionName: {
      type: String,
      default: null
    },
    innerClass: {
      type: classProp,
      default: null
    }
  },
  setup(props) {
    const handleDelete = inject(DELETE_HANDLER, noop);
    const nh = useNameHelper("popup");
    const wrapper = ref();
    const transition = computed(() => props.transitionName || nh.ns("popup-top"));
    onMounted(() => {
      nextTick(() => {
        const state = props.state;
        if (state && wrapper.value) {
          state.height = wrapper.value.offsetHeight;
        }
      });
    });
    return {
      nh,
      zIndex: useZIndex(),
      transition,
      wrapper,
      handleDelete
    };
  }
});
const _hoisted_1 = ["vxp-index"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_Renderer = resolveComponent("Renderer");
  return openBlock(), createBlock(Transition, {
    appear: "",
    name: _ctx.transitionName,
    onAfterLeave: _cache[0] || (_cache[0] = ($event) => _ctx.handleDelete(_ctx.state.key))
  }, {
    default: withCtx(() => [
      withDirectives(createElementVNode("div", {
        ref: "wrapper",
        class: normalizeClass(_ctx.nh.be("item")),
        style: normalizeStyle({ zIndex: _ctx.zIndex }),
        "vxp-index": _ctx.state.key
      }, [
        createElementVNode("div", {
          class: normalizeClass([_ctx.nh.be("item-inner"), _ctx.innerClass])
        }, [
          renderSlot(_ctx.$slots, "default", { item: _ctx.state }, () => [
            typeof _ctx.state.renderer === "function" ? (openBlock(), createBlock(_component_Renderer, {
              key: 0,
              renderer: _ctx.state.renderer
            }, null, 8, ["renderer"])) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
              createTextVNode(toDisplayString(_ctx.state.content), 1)
            ], 64))
          ])
        ], 2)
      ], 14, _hoisted_1), [
        [vShow, _ctx.state.visible]
      ])
    ]),
    _: 3
  }, 8, ["name"]);
}
var PopupItem = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { PopupItem as default };

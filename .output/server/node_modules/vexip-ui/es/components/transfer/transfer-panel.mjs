import _sfc_main from "./transfer-panel.vue_vue_type_script_lang.mjs";
import { createElementVNode, resolveComponent, openBlock, createElementBlock, normalizeClass, renderSlot, normalizeProps, guardReactiveProps, createVNode, withModifiers, withCtx, toDisplayString, createTextVNode, createCommentVNode, createBlock, Fragment, renderList } from "vue";
import _export_sfc from "../../_virtual/plugin-vue_export-helper.mjs";
const _hoisted_1 = ["title"];
const _hoisted_2 = /* @__PURE__ */ createElementVNode("span", { style: { "margin": "0 4px" } }, "/", -1);
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_Checkbox = resolveComponent("Checkbox");
  const _component_Retweet = resolveComponent("Retweet");
  const _component_Icon = resolveComponent("Icon");
  const _component_CollapseTransition = resolveComponent("CollapseTransition");
  const _component_Input = resolveComponent("Input");
  const _component_Renderer = resolveComponent("Renderer");
  const _component_ResizeObserver = resolveComponent("ResizeObserver");
  const _component_VirtualList = resolveComponent("VirtualList");
  const _component_ChevronLeft = resolveComponent("ChevronLeft");
  const _component_NumberInput = resolveComponent("NumberInput");
  const _component_ChevronRight = resolveComponent("ChevronRight");
  return openBlock(), createElementBlock("div", {
    ref: "wrapper",
    class: normalizeClass(_ctx.className),
    tabindex: "0",
    onBlur: _cache[8] || (_cache[8] = (...args) => _ctx.handleBlur && _ctx.handleBlur(...args))
  }, [
    createElementVNode("div", {
      ref: "header",
      class: normalizeClass(_ctx.nh.be("header"))
    }, [
      renderSlot(_ctx.$slots, "header", normalizeProps(guardReactiveProps(_ctx.getSlotPayload())), () => [
        createVNode(_component_Checkbox, {
          inherit: "",
          control: "",
          class: normalizeClass(_ctx.nh.be("checkbox")),
          state: _ctx.deepState ? _ctx.state : void 0,
          checked: _ctx.allSelected,
          partial: _ctx.partial,
          disabled: _ctx.disabled,
          "tab-index": -1,
          onClick: withModifiers(_ctx.toggleSelectAll, ["prevent"])
        }, null, 8, ["class", "state", "checked", "partial", "disabled", "onClick"]),
        createElementVNode("div", {
          class: normalizeClass([_ctx.nh.be("reverse"), _ctx.disabled && _ctx.nh.bem("reverse", "disabled")]),
          title: _ctx.locale.reverse,
          onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleReverse && _ctx.handleReverse(...args))
        }, [
          createVNode(_component_Icon, { scale: 1.2 }, {
            default: withCtx(() => [
              createVNode(_component_Retweet)
            ]),
            _: 1
          }, 8, ["scale"])
        ], 10, _hoisted_1),
        createElementVNode("div", {
          class: normalizeClass(_ctx.nh.be("counter"))
        }, toDisplayString(`${_ctx.currentSelected.size}/${_ctx.visibleOptions.length}`), 3),
        _ctx.title || _ctx.$slots.title ? (openBlock(), createElementBlock("span", {
          key: 0,
          class: normalizeClass(_ctx.nh.be("title"))
        }, [
          renderSlot(_ctx.$slots, "title", normalizeProps(guardReactiveProps(_ctx.getSlotPayload())), () => [
            createTextVNode(toDisplayString(_ctx.title), 1)
          ])
        ], 2)) : createCommentVNode("", true),
        createVNode(_component_CollapseTransition, {
          appear: "",
          horizontal: "",
          "fade-effect": ""
        }, {
          default: withCtx(() => [
            _ctx.loading ? (openBlock(), createElementBlock("div", {
              key: 0,
              class: normalizeClass(_ctx.nh.be("loading"))
            }, [
              createVNode(_component_Icon, {
                spin: _ctx.loadingSpin,
                pulse: !_ctx.loadingSpin,
                icon: _ctx.loadingIcon
              }, null, 8, ["spin", "pulse", "icon"])
            ], 2)) : createCommentVNode("", true)
          ]),
          _: 1
        })
      ])
    ], 2),
    typeof _ctx.filter === "function" ? (openBlock(), createElementBlock("div", {
      key: 0,
      ref: "search",
      class: normalizeClass(_ctx.nh.be("filter"))
    }, [
      createVNode(_component_Input, {
        ref: "input",
        value: _ctx.currentFilter,
        "onUpdate:value": _cache[1] || (_cache[1] = ($event) => _ctx.currentFilter = $event),
        inherit: "",
        clearable: "",
        disabled: _ctx.disabled,
        suffix: _ctx.MagnifyingGlass,
        placeholder: _ctx.searching ? void 0 : _ctx.locale.search,
        onKeydown: _cache[2] || (_cache[2] = withModifiers(() => {
        }, ["stop"])),
        onInput: _cache[3] || (_cache[3] = ($event) => _ctx.currentFilter = $event),
        onFocus: _cache[4] || (_cache[4] = ($event) => _ctx.searching = true),
        onBlur: _cache[5] || (_cache[5] = ($event) => _ctx.searching = false)
      }, null, 8, ["value", "disabled", "suffix", "placeholder"])
    ], 2)) : createCommentVNode("", true),
    _ctx.paged || _ctx.$slots.body ? (openBlock(), createBlock(_component_ResizeObserver, {
      key: 1,
      throttle: "",
      onResize: _ctx.computePageSize
    }, {
      default: withCtx(() => [
        createElementVNode("ul", {
          ref: "body",
          class: normalizeClass(_ctx.nh.be("body")),
          role: "listbox"
        }, [
          renderSlot(_ctx.$slots, "body", normalizeProps(guardReactiveProps(_ctx.getSlotPayload())), () => [
            _ctx.pagedOptions.length ? (openBlock(true), createElementBlock(Fragment, { key: 0 }, renderList(_ctx.pagedOptions, (option, index) => {
              return openBlock(), createBlock(_component_Renderer, {
                key: index,
                renderer: _ctx.renderOption,
                data: { option, index }
              }, null, 8, ["renderer", "data"]);
            }), 128)) : (openBlock(), createElementBlock("div", {
              key: 1,
              class: normalizeClass(_ctx.nh.be("empty"))
            }, toDisplayString(_ctx.emptyText || _ctx.locale.empty), 3))
          ])
        ], 2)
      ]),
      _: 3
    }, 8, ["onResize"])) : (openBlock(), createBlock(_component_VirtualList, {
      key: 2,
      ref: "list",
      inherit: "",
      class: normalizeClass(_ctx.nh.be("body")),
      items: _ctx.visibleOptions,
      "item-size": _ctx.optionHeight,
      "item-fixed": "",
      "use-y-bar": "",
      "id-key": "value",
      "items-attrs": { role: "listbox", ariaLabel: _ctx.type },
      onResize: _ctx.computePageSize
    }, {
      default: withCtx(({ item: option, index }) => [
        createVNode(_component_Renderer, {
          renderer: _ctx.renderOption,
          data: { option, index }
        }, null, 8, ["renderer", "data"])
      ]),
      empty: withCtx(() => [
        createElementVNode("div", {
          class: normalizeClass(_ctx.nh.be("empty"))
        }, toDisplayString(_ctx.emptyText || _ctx.locale.empty), 3)
      ]),
      _: 1
    }, 8, ["class", "items", "item-size", "items-attrs", "onResize"])),
    _ctx.paged || _ctx.$slots.footer ? (openBlock(), createElementBlock("div", {
      key: 3,
      ref: "footer",
      class: normalizeClass(_ctx.nh.be("footer"))
    }, [
      renderSlot(_ctx.$slots, "footer", normalizeProps(guardReactiveProps(_ctx.getSlotPayload())), () => [
        createElementVNode("div", {
          class: normalizeClass(_ctx.nh.be("pagination"))
        }, [
          createVNode(_component_Icon, {
            class: normalizeClass([_ctx.nh.be("page-plus"), _ctx.currentPage <= 1 && _ctx.nh.bem("page-plus", "disabled")]),
            onClick: _cache[6] || (_cache[6] = ($event) => _ctx.handlePageChange(_ctx.currentPage - 1))
          }, {
            default: withCtx(() => [
              createVNode(_component_ChevronLeft)
            ]),
            _: 1
          }, 8, ["class"]),
          createVNode(_component_NumberInput, {
            inherit: "",
            value: _ctx.currentPage,
            class: normalizeClass(_ctx.nh.be("page-input")),
            size: "small",
            min: 1,
            max: _ctx.totalPages,
            onChange: _ctx.handlePageChange
          }, null, 8, ["value", "class", "max", "onChange"]),
          _hoisted_2,
          createElementVNode("span", null, toDisplayString(_ctx.totalPages), 1),
          createVNode(_component_Icon, {
            class: normalizeClass([
              _ctx.nh.be("page-minus"),
              _ctx.currentPage >= _ctx.totalPages && _ctx.nh.bem("page-minus", "disabled")
            ]),
            onClick: _cache[7] || (_cache[7] = ($event) => _ctx.handlePageChange(_ctx.currentPage + 1))
          }, {
            default: withCtx(() => [
              createVNode(_component_ChevronRight)
            ]),
            _: 1
          }, 8, ["class"])
        ], 2)
      ])
    ], 2)) : createCommentVNode("", true)
  ], 34);
}
var TransferPanel = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { TransferPanel as default };

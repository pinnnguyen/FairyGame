import { defineComponent, provide, h, renderSlot } from "vue";
import "../../common/config/src/index.mjs";
import { skeletonGroupProps } from "./props.mjs";
import { GROUP_STATE } from "./symbol.mjs";
import { useProps } from "../../common/config/src/props.mjs";
import { useNameHelper } from "../../common/config/src/namespace.mjs";
var SkeletonGroup = defineComponent({
  name: "SkeletonGroup",
  props: skeletonGroupProps,
  setup(_props, { slots }) {
    const props = useProps("skeletonGroup", _props, {
      size: null,
      tag: false,
      itemTag: null,
      activated: false,
      round: false,
      circle: false,
      block: false,
      loading: true
    });
    const nh = useNameHelper("skeletonGroup");
    provide(GROUP_STATE, props);
    return () => {
      if (props.tag) {
        return h(
          typeof props.tag === "string" ? props.tag : "div",
          {
            class: [nh.b(), props.inherit && nh.bm("inherit")],
            role: "group"
          },
          {
            default: () => {
              var _a;
              return (_a = slots.default) == null ? void 0 : _a.call(slots);
            }
          }
        );
      }
      return renderSlot(slots, "default");
    };
  }
});
export { SkeletonGroup as default };

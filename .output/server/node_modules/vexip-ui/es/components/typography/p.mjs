import { defineComponent, createVNode, mergeProps } from "vue";
import "../../common/config/src/index.mjs";
import Text from "./text.mjs";
import { pProps } from "./props.mjs";
import { useProps } from "../../common/config/src/props.mjs";
var P = defineComponent({
  name: "P",
  props: pProps,
  emits: [],
  setup(_props, {
    slots
  }) {
    const props = useProps("p", _props, {
      type: "default",
      delete: false,
      strong: false,
      italic: false,
      underline: false,
      mark: false,
      disabled: false,
      keyboard: false,
      thin: false,
      reversed: false
    });
    return () => createVNode(Text, mergeProps(props, {
      "tag": "p"
    }), {
      default: () => {
        var _a;
        return [(_a = slots.default) == null ? void 0 : _a.call(slots)];
      }
    });
  }
});
export { P as default };

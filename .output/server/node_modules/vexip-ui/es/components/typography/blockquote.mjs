import { defineComponent, computed, createVNode } from "vue";
import "../../common/config/src/index.mjs";
import { blockquoteProps } from "./props.mjs";
import { useProps } from "../../common/config/src/props.mjs";
import { useNameHelper } from "../../common/config/src/namespace.mjs";
var Blockquote = defineComponent({
  name: "Blockquote",
  props: blockquoteProps,
  emits: [],
  setup(_props, {
    slots
  }) {
    const props = useProps("blockquote", _props, {
      type: "default"
    });
    const nh = useNameHelper("blockquote");
    const className = computed(() => {
      return {
        [nh.b()]: true,
        [nh.bs("vars")]: true,
        [nh.bm("inherit")]: props.inherit,
        [nh.bm(props.type)]: props.type !== "default"
      };
    });
    return () => {
      var _a;
      return createVNode("blockquote", {
        "class": className.value
      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);
    };
  }
});
export { Blockquote as default };

"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});var r=require("vue"),m=require("./toast.cjs"),c=require("@vexip-ui/utils"),u=require("@vexip-ui/icons");const f={success:{icon:u.Check},warning:{icon:u.Exclamation},error:{icon:u.Xmark},loading:{icon:u.Spinner,showMask:!0,iconProps:{pulse:!0}}};class a{constructor(t={}){t={...t,duration:t.duration?c.toNumber(t.duration):2e3},this._mountedApp=null,this._instance=null,this._container=null,this._timer=null,this.name="Toast",this.defaults={},this.config(t),this.open=(e,n)=>this._open(null,e,n),this.success=(e,n)=>this._open("success",e,n),this.warning=(e,n)=>this._open("warning",e,n),this.error=(e,n)=>this._open("error",e,n),this.loading=(e,n)=>this._open("loading",e,n)}close(){var t;this._timer&&clearTimeout(this._timer),(t=this._getInstance())==null||t.cloasToast()}config(t){this.defaults={...this.defaults,...t}}clone(){return new a(this.defaults)}destroy(){this._container&&r.render(null,this._container),c.destroyObject(this)}isDestroyed(){return!1}install(t,e={}){const{property:n,...o}=e;this.config(o),t.config.globalProperties[n||"$toast"]=this,this._mountedApp=t}_getInstance(){if(!this._mountedApp)return console.warn("[vexip-ui:Toast]: App missing, the plugin maybe not installed."),null;if(!this._instance){const t=r.createVNode(m,null,null);this._container=document.createElement("div"),t.appContext=this._mountedApp._context,r.render(t,this._container,!1),document.body.appendChild(this._container.firstElementChild),this._instance=t.component.proxy}return this._instance}_open(t,e,n){var d;if(!c.isClient)return c.noop;this._timer&&clearTimeout(this._timer);const o=typeof e=="string"?{content:e,duration:n}:e,p=t?(d=f[t])!=null?d:{}:{},l=o.onClose,_=()=>{if(this._timer&&clearTimeout(this._timer),typeof l=="function")return l()},i=this._getInstance(),s={...this.defaults,...p,...o,onClose:_};s.icon&&typeof s.icon!="function"&&(s.icon=r.markRaw(s.icon)),i==null||i.openToast(s);const h=typeof s.duration=="number"?s.duration:2e3;return h>=500&&(this._timer=setTimeout(()=>{i==null||i.cloasToast()},h)),()=>{this._timer&&clearTimeout(this._timer),i==null||i.cloasToast()}}}const g=new a;exports.Toast=g;exports.ToastManager=a;

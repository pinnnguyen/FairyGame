import { defineComponent, computed, provide, openBlock, createElementBlock, normalizeClass, renderSlot } from "vue";
import "../../common/config/src/index.mjs";
import { buttonGroupProps } from "./props.mjs";
import { buttonTypes, GROUP_STATE } from "./symbol.mjs";
import _export_sfc from "../../_virtual/plugin-vue_export-helper.mjs";
import { useProps } from "../../common/config/src/props.mjs";
import { useNameHelper } from "../../common/config/src/namespace.mjs";
const _sfc_main = defineComponent({
  name: "ButtonGroup",
  props: buttonGroupProps,
  setup(_props) {
    const props = useProps("buttonGroup", _props, {
      size: null,
      type: {
        default: "default",
        validator: (value) => buttonTypes.includes(value)
      },
      circle: false
    });
    const nh = useNameHelper("button-group");
    const className = computed(() => {
      return {
        [nh.b()]: true,
        [nh.bm("inherit")]: props.inherit,
        [nh.bm("circle")]: props.circle
      };
    });
    provide(GROUP_STATE, props);
    return {
      className
    };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", {
    class: normalizeClass(_ctx.className),
    role: "group"
  }, [
    renderSlot(_ctx.$slots, "default")
  ], 2);
}
var ButtonGroup = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { ButtonGroup as default };

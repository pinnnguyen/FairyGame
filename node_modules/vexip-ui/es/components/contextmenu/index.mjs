import { createApp } from "vue";
import Component from "./contextmenu.mjs";
import { isClient, destroyObject } from "@vexip-ui/utils";
class ContextmenuManager {
  constructor() {
    this._instance = null;
    this._innerApp = null;
    this._container = null;
    this._pending = null;
    this.name = "Contextmenu";
  }
  open(options) {
    if (!isClient) {
      return;
    }
    this._pending = this._getInstance().openContextmenu(options);
    return this._pending;
  }
  destroy() {
    var _a;
    (_a = this._innerApp) == null ? void 0 : _a.unmount();
    destroyObject(this);
  }
  isDestroyed() {
    return false;
  }
  install(app) {
    app.config.globalProperties.$contextmenu = this;
  }
  _getInstance() {
    var _a;
    if (this._pending) {
      let innerApp = this._innerApp;
      const unmount = () => {
        innerApp == null ? void 0 : innerApp.unmount();
        innerApp = null;
      };
      this._pending.finally(unmount);
      this._instance.handleCancel();
    } else {
      (_a = this._innerApp) == null ? void 0 : _a.unmount();
    }
    this._container = document.createElement("div");
    this._innerApp = createApp(Component);
    this._instance = this._innerApp.mount(this._container);
    this._pending = null;
    document.body.appendChild(this._container.firstElementChild);
    return this._instance;
  }
}
const Contextmenu = new ContextmenuManager();
export { Contextmenu, ContextmenuManager };

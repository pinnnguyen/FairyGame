import { defineComponent, toRef, computed, createVNode } from "vue";
import "../icon/index.mjs";
import "../linker/index.mjs";
import "../../common/config/src/index.mjs";
import { layoutFooterProps } from "./props.mjs";
import { useLayoutState, useMediaQuery } from "./helper.mjs";
import { useProps } from "../../common/config/src/props.mjs";
import { useNameHelper } from "../../common/config/src/namespace.mjs";
import Linker from "../linker/linker.mjs";
import Icon from "../icon/icon.mjs";
var LayoutFooter = defineComponent({
  name: "LayoutFooter",
  props: layoutFooterProps,
  setup(_props, {
    slots
  }) {
    const props = useProps("layout", _props, {
      tag: "footer",
      copyright: "",
      links: () => [],
      verticalLinks: "md"
    });
    const nh = useNameHelper("layout");
    const layoutState = useLayoutState();
    const horizontalMatched = useMediaQuery(toRef(props, "verticalLinks"));
    const className = computed(() => {
      return {
        [nh.be("footer")]: true,
        [nh.bs("vars")]: !layoutState.isLayout,
        [nh.bem("footer", "inherit")]: layoutState.isLayout || props.inherit
      };
    });
    function renderLinks() {
      var _a;
      if (!((_a = props.links) == null ? void 0 : _a.length)) {
        return null;
      }
      return createVNode("div", {
        "class": [nh.be("links"), !horizontalMatched.value && nh.bem("links", "vertical")]
      }, [createVNode("div", {
        "class": nh.be("links-row")
      }, [props.links.map((group) => {
        var _a2;
        return createVNode("div", {
          "class": [nh.be("link-group"), !horizontalMatched.value && nh.bem("link-group", "vertical")]
        }, [createVNode("div", {
          "class": [nh.be("link-name"), nh.bem("link-name", "group")]
        }, [group.to ? createVNode(Linker, {
          "icon": group.icon,
          "to": group.to,
          "target": group.target
        }, {
          default: () => [group.name]
        }) : [group.icon && createVNode(Icon, {
          "icon": group.icon
        }, null), group.name], group.subname && createVNode("div", {
          "class": nh.be("link-subname")
        }, [`- ${group.subname}`])]), ((_a2 = group.children) == null ? void 0 : _a2.length) ? group.children.map((link) => createVNode("div", {
          "class": nh.be("link")
        }, [createVNode(Linker, {
          "icon": link.icon,
          "to": link.to,
          "target": link.target
        }, {
          default: () => [link.name]
        }), link.subname && createVNode("div", {
          "class": nh.be("link-subname")
        }, [`- ${link.subname}`])])) : null]);
      })])]);
    }
    return () => {
      const CustomTag = props.tag || "footer";
      return createVNode(CustomTag, {
        "class": className.value
      }, {
        default: () => [slots.links ? slots.links() : renderLinks(), createVNode("div", {
          "class": nh.be("copyright")
        }, [slots.copyright ? slots.copyright() : props.copyright])]
      });
    };
  }
});
export { LayoutFooter as default };

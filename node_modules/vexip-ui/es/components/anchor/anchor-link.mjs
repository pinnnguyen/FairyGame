import { defineComponent, inject, ref, reactive, toRef, computed, provide, watch, onMounted, onBeforeUnmount, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, normalizeStyle, withModifiers, renderSlot, Fragment, renderList, createBlock, withCtx, createTextVNode, toDisplayString, createCommentVNode } from "vue";
import "../../common/config/src/index.mjs";
import { ANCHOR_STATE, LINK_STATE, baseIndentWidth } from "./symbol.mjs";
import _export_sfc from "../../_virtual/plugin-vue_export-helper.mjs";
import { useNameHelper } from "../../common/config/src/namespace.mjs";
const _sfc_main = defineComponent({
  name: "AnchorLink",
  props: {
    to: {
      type: String,
      default: ""
    },
    title: {
      type: String,
      default: ""
    },
    children: {
      type: Array,
      default: () => []
    }
  },
  setup(props) {
    const anchorState = inject(ANCHOR_STATE, null);
    const parentLinkState = inject(LINK_STATE, null);
    const nh = useNameHelper("anchor");
    const indent = ref((parentLinkState == null ? void 0 : parentLinkState.indent) ? (parentLinkState == null ? void 0 : parentLinkState.indent) + 1 : 1);
    const active = ref(false);
    const link = ref();
    const state = reactive({
      el: link,
      to: toRef(props, "to"),
      active,
      indent
    });
    const linkClass = computed(() => {
      return {
        [nh.be("link")]: true,
        [nh.bem("link", "active")]: state.active
      };
    });
    const linkStyle = computed(() => {
      return {
        paddingLeft: `${baseIndentWidth * indent.value}px`
      };
    });
    provide(LINK_STATE, state);
    if (anchorState) {
      watch(
        () => anchorState.currentActive,
        (value) => {
          active.value = value === props.to;
        }
      );
      onMounted(() => {
        anchorState.increaseLink(state);
      });
      onBeforeUnmount(() => {
        anchorState.decreaseLink(state);
      });
    }
    function handleSelect() {
      if (anchorState) {
        anchorState.handleActive(props.to);
      }
    }
    return {
      nh,
      linkClass,
      linkStyle,
      link,
      handleSelect
    };
  }
});
const _hoisted_1 = ["href", "title"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_AnchorLink = resolveComponent("AnchorLink", true);
  return openBlock(), createElementBlock("li", {
    class: normalizeClass(_ctx.nh.be("item"))
  }, [
    createElementVNode("a", {
      ref: "link",
      class: normalizeClass(_ctx.linkClass),
      href: _ctx.to,
      style: normalizeStyle(_ctx.linkStyle),
      title: _ctx.title,
      onClick: _cache[0] || (_cache[0] = withModifiers((...args) => _ctx.handleSelect && _ctx.handleSelect(...args), ["prevent"]))
    }, [
      renderSlot(_ctx.$slots, "default")
    ], 14, _hoisted_1),
    _ctx.$slots.group || _ctx.children && _ctx.children.length ? (openBlock(), createElementBlock("ul", {
      key: 0,
      class: normalizeClass(_ctx.nh.be("list"))
    }, [
      renderSlot(_ctx.$slots, "group", {}, () => [
        _ctx.children && _ctx.children.length ? (openBlock(true), createElementBlock(Fragment, { key: 0 }, renderList(_ctx.children, (child) => {
          return openBlock(), createBlock(_component_AnchorLink, {
            key: child.to,
            to: child.to,
            title: child.title,
            children: child.children
          }, {
            default: withCtx(() => [
              createTextVNode(toDisplayString(child.label), 1)
            ]),
            _: 2
          }, 1032, ["to", "title", "children"]);
        }), 128)) : createCommentVNode("", true)
      ])
    ], 2)) : createCommentVNode("", true)
  ], 2);
}
var AnchorLink = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { AnchorLink as default };

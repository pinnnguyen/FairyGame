import { ref } from "vue";
import { isClient } from "@vexip-ui/utils";
const breakPoints = Object.freeze(["xs", "sm", "md", "lg", "xl", "xxl"]);
const currentBreakPoint = ref("xs");
if (isClient) {
  let handleBreakPointChange = function() {
    for (const [point, query] of queryEntries) {
      if (query.matches) {
        currentBreakPoint.value = point;
        break;
      }
    }
  };
  const computedStyle = getComputedStyle(document.documentElement);
  const queryMap = {};
  breakPoints.forEach((point) => {
    const media = computedStyle.getPropertyValue(`--vxp-break-point-${point}`).trim();
    const query = matchMedia(`only screen and ${media}`);
    query.addEventListener("change", handleBreakPointChange);
    queryMap[point] = query;
  });
  const queryEntries = Object.entries(queryMap).reverse();
  handleBreakPointChange();
}
export { breakPoints, currentBreakPoint };

import "../../common/config/src/index.mjs";
import { SECOND_ON_MILLS, MINUTE_ON_MILLS, HOUR_ON_MILLS, DAY_ON_MILLIS } from "@vexip-ui/utils";
import { makeSentence, getCountWord } from "../../common/config/src/locale/index.mjs";
let id = 1;
function getId() {
  return id++;
}
const recordMap = /* @__PURE__ */ new Map();
let timer;
let isRunning;
function subscribe(id2, record) {
  recordMap.set(id2, record);
  if (recordMap.size && !isRunning) {
    clearInterval(timer);
    timer = setInterval(() => {
      isRunning = true;
      const current = Date.now();
      recordMap.forEach((record2) => {
        if (!record2.interval)
          return;
        if (current - record2.updated > record2.interval) {
          record2.timeAgo.value = computeTimeAgo(
            record2.datetime,
            current,
            record2.locale.value,
            record2.wordSpace.value
          );
          record2.updated = current;
        }
      });
    }, 5e3);
  }
}
function unsubscribe(id2) {
  recordMap.delete(id2);
  if (!recordMap.size) {
    clearInterval(timer);
    isRunning = false;
  }
}
function computeTimeAgo(date, current, locale, wordSpace) {
  const diff = Math.abs(current - date.getTime());
  const type = current > date.getTime() ? locale.ago : locale.late;
  let label;
  let usedDiff;
  let noFormat = false;
  if (diff < 10 * SECOND_ON_MILLS) {
    label = locale.justNow;
    noFormat = true;
  } else if (diff < MINUTE_ON_MILLS) {
    label = locale.second;
    usedDiff = Math.floor(diff / SECOND_ON_MILLS);
  } else if (diff < HOUR_ON_MILLS) {
    label = locale.minute;
    usedDiff = Math.floor(diff / MINUTE_ON_MILLS);
  } else if (diff < DAY_ON_MILLIS) {
    label = locale.hour;
    usedDiff = Math.floor(diff / HOUR_ON_MILLS);
  } else if (diff < 30 * DAY_ON_MILLIS) {
    usedDiff = Math.floor(diff / DAY_ON_MILLIS);
    if (usedDiff === 1) {
      label = locale.yesterday;
      noFormat = true;
    } else {
      label = locale.days;
    }
  } else if (diff < 365 * DAY_ON_MILLIS) {
    usedDiff = Math.floor(diff / (30 * DAY_ON_MILLIS));
    if (usedDiff === 1) {
      label = locale.lastMonth;
      noFormat = true;
    } else {
      label = locale.months;
    }
  } else {
    usedDiff = Math.floor(diff / 365 / DAY_ON_MILLIS);
    if (usedDiff === 1) {
      label = locale.lastYear;
      noFormat = true;
    } else {
      label = locale.years;
    }
  }
  if (noFormat) {
    return label;
  }
  return makeSentence(`${getCountWord(label, usedDiff)} ${type}`, wordSpace);
}
export { computeTimeAgo, getId, subscribe, unsubscribe };

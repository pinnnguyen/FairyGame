import { defineComponent, computed, resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, Fragment, renderList, createBlock, Transition, withCtx, createVNode, renderSlot } from "vue";
import "../upload-file/index.mjs";
import "../../common/config/src/index.mjs";
import { uploadListProps } from "./props.mjs";
import { uploadListTypes } from "./symbol.mjs";
import _export_sfc from "../../_virtual/plugin-vue_export-helper.mjs";
import UploadFile from "./upload-file.mjs";
import { useProps, emitEvent } from "../../common/config/src/props.mjs";
import { useNameHelper } from "../../common/config/src/namespace.mjs";
const _sfc_main = defineComponent({
  name: "UploadList",
  components: {
    UploadFile
  },
  props: uploadListProps,
  emits: [],
  setup(_props) {
    const props = useProps("uploadList", _props, {
      files: {
        default: () => [],
        static: true
      },
      selectToAdd: false,
      iconRenderer: {
        default: null,
        isFunc: true
      },
      type: {
        default: "name",
        validator: (value) => uploadListTypes.includes(value)
      },
      loadingText: null,
      style: null,
      precision: 2
    });
    const nh = useNameHelper("upload");
    const transitionName = computed(() => nh.ns("fade"));
    function handleDelete(file) {
      emitEvent(props.onDelete, file);
    }
    function handlePreview(file) {
      emitEvent(props.onPreview, file);
    }
    return {
      props,
      nh,
      transitionName,
      handleDelete,
      handlePreview
    };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_UploadFile = resolveComponent("UploadFile");
  return openBlock(), createElementBlock("ul", {
    class: normalizeClass([_ctx.nh.be("files"), _ctx.nh.bs("vars"), _ctx.props.inherit && _ctx.nh.bem("files", "inherit")]),
    style: normalizeStyle(_ctx.props.style)
  }, [
    (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.props.files, (item) => {
      return openBlock(), createBlock(Transition, {
        key: item.id,
        appear: "",
        name: _ctx.props.selectToAdd ? _ctx.transitionName : void 0
      }, {
        default: withCtx(() => [
          createVNode(_component_UploadFile, {
            inherit: "",
            file: item,
            "icon-renderer": _ctx.props.iconRenderer,
            "list-type": _ctx.props.type,
            "loading-text": _ctx.props.loadingText,
            "select-to-add": _ctx.props.selectToAdd,
            precision: _ctx.props.precision,
            "can-preview": _ctx.props.canPreview,
            onDelete: _ctx.handleDelete,
            onPreview: _ctx.handlePreview
          }, {
            default: withCtx(({ file, status, percentage }) => [
              renderSlot(_ctx.$slots, "item", {
                file,
                status,
                percentage
              })
            ]),
            icon: withCtx(({ file }) => [
              renderSlot(_ctx.$slots, "icon", { file })
            ]),
            _: 2
          }, 1032, ["file", "icon-renderer", "list-type", "loading-text", "select-to-add", "precision", "can-preview", "onDelete", "onPreview"])
        ]),
        _: 2
      }, 1032, ["name"]);
    }), 128)),
    renderSlot(_ctx.$slots, "suffix")
  ], 6);
}
var UploadList = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { UploadList as default };

import { nextTick } from "vue";
const getMockFile = (element, files) => {
  Object.defineProperty(element, "files", {
    get() {
      return files;
    },
    set() {
      return true;
    }
  });
};
const getXhr = (type) => {
  return class XMLHttpRequest {
    constructor() {
      this.status = 0;
      this.withCredentials = false;
      this.responseText = '{"success": true}';
      this.response = "success";
      this.upload = {
        onprogress(event) {
          return event;
        }
      };
    }
    open() {
    }
    setRequestHeader() {
    }
    send() {
      if (type === "success") {
        this.status = 200;
      } else if (type === "abort") {
        this.onabort();
        this.abort();
      } else if (type === "error") {
        this.status = 199;
        this.onerror();
      }
      this.onload();
      this.upload.onprogress({
        loaded: 50,
        total: 100
      });
    }
    onload() {
    }
    onabort() {
    }
    abort() {
    }
    onerror() {
    }
  };
};
const triggerUploadFiles = async (input, fileList) => {
  getMockFile(input.element, fileList);
  await input.trigger("change");
  await nextTick();
};
class FormData {
  append() {
  }
}
class FileReader {
  constructor() {
    this.result = "";
  }
  readAsDataURL(source) {
    this.result = `data:image/svg+xml;base64,${source.name}`;
    nextTick(() => {
      this.onload();
    });
  }
  onload() {
  }
}
export { FileReader, FormData, getXhr, triggerUploadFiles };

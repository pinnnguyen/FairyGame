import { defineComponent, computed, resolveComponent, openBlock, createElementBlock, normalizeClass, renderSlot, createBlock, createCommentVNode } from "vue";
import "../icon/index.mjs";
import "../../common/config/src/index.mjs";
import { linkerProps } from "./props.mjs";
import _export_sfc from "../../_virtual/plugin-vue_export-helper.mjs";
import Icon from "../icon/icon.mjs";
import { useProps, emitEvent } from "../../common/config/src/props.mjs";
import { useNameHelper } from "../../common/config/src/namespace.mjs";
const linkerTypes = Object.freeze([
  "default",
  "primary",
  "success",
  "error",
  "warning",
  "info"
]);
const _sfc_main = defineComponent({
  name: "Linker",
  components: {
    Icon
  },
  props: linkerProps,
  setup(_props) {
    const props = useProps("linker", _props, {
      to: {
        default: null,
        static: true
      },
      type: {
        default: "default",
        validator: (value) => linkerTypes.includes(value)
      },
      icon: null,
      underline: false,
      disabled: false,
      target: "_blank"
    });
    const nh = useNameHelper("linker");
    const className = computed(() => {
      return {
        [nh.b()]: true,
        [nh.bs("vars")]: true,
        [nh.bm("inherit")]: props.inherit,
        [nh.bm(props.type)]: props.type !== "default",
        [nh.bm("disabled")]: props.disabled,
        [nh.bm("underline")]: props.underline
      };
    });
    function handleClick(event) {
      if (props.disabled) {
        event.preventDefault();
      }
      emitEvent(props.onClick, event);
    }
    return {
      props,
      nh,
      className,
      handleClick
    };
  }
});
const _hoisted_1 = ["href", "target"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_Icon = resolveComponent("Icon");
  return openBlock(), createElementBlock("a", {
    class: normalizeClass(_ctx.className),
    href: _ctx.props.to,
    tabindex: "0",
    target: _ctx.props.target,
    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))
  }, [
    renderSlot(_ctx.$slots, "icon", {}, () => [
      _ctx.props.icon ? (openBlock(), createBlock(_component_Icon, {
        key: 0,
        class: normalizeClass(_ctx.nh.be("icon")),
        icon: _ctx.props.icon
      }, null, 8, ["class", "icon"])) : createCommentVNode("", true)
    ]),
    renderSlot(_ctx.$slots, "default")
  ], 10, _hoisted_1);
}
var Linker = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { Linker as default };

import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, createElementVNode, normalizeStyle, renderSlot } from "vue";
import { placementWhileList } from "@vexip-ui/hooks";
import "../../common/config/src/index.mjs";
import { bubbleProps } from "./props.mjs";
import _export_sfc from "../../_virtual/plugin-vue_export-helper.mjs";
import { useProps } from "../../common/config/src/props.mjs";
import { useNameHelper } from "../../common/config/src/namespace.mjs";
const _sfc_main = defineComponent({
  name: "Bubble",
  props: bubbleProps,
  setup(_props) {
    const props = useProps("bubble", _props, {
      placement: {
        default: "right",
        validator: (value) => placementWhileList.includes(value)
      },
      background: "",
      shadow: false,
      contentClass: null
    });
    const nh = useNameHelper("bubble");
    const className = computed(() => {
      return [
        nh.b(),
        nh.bs("vars"),
        nh.bm(props.placement),
        {
          [nh.bm("inherit")]: props.inherit,
          [nh.bm("background")]: props.background,
          [nh.bm("shadow")]: props.shadow
        }
      ];
    });
    const contentStyle = computed(() => {
      const style = {
        backgroundColor: props.background
      };
      if (typeof props.shadow === "string") {
        style.boxShadow = `0 0 4px ${props.shadow}`;
      }
      return style;
    });
    const arrowStyle = computed(() => {
      const position = props.placement.split("-").shift();
      return {
        [`border-${position}-color`]: props.background
      };
    });
    return {
      props,
      nh,
      className,
      contentStyle,
      arrowStyle
    };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", {
    class: normalizeClass(_ctx.className)
  }, [
    createElementVNode("div", {
      class: normalizeClass([_ctx.nh.be("content"), _ctx.props.contentClass]),
      style: normalizeStyle(_ctx.contentStyle)
    }, [
      createElementVNode("div", {
        class: normalizeClass(_ctx.nh.be("arrow")),
        style: normalizeStyle(_ctx.arrowStyle)
      }, null, 6),
      renderSlot(_ctx.$slots, "default")
    ], 6)
  ], 2);
}
var Bubble = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { Bubble as default };
